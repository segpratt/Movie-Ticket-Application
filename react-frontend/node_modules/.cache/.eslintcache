[{"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/index.js":"1","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/App.js":"2","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/reportWebVitals.js":"3","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/Routes.js":"4","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/lib/contextLib.js":"5","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Signup.js":"6","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Login.js":"7","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Payment.js":"8","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Showtimes.js":"9","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/AnnualFee.js":"10","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Admin.js":"11","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/NotFound.js":"12","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Home.js":"13","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/AdminLogin.js":"14","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Seats2.js":"15","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Movies.js":"16","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Theatres.js":"17","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Account.js":"18","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Seats.js":"19","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/SearchMovie.js":"20"},{"size":671,"mtime":1670224140000,"results":"21","hashOfConfig":"22"},{"size":3168,"mtime":1670224140000,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1670224140000,"results":"24","hashOfConfig":"22"},{"size":1931,"mtime":1670224140000,"results":"25","hashOfConfig":"22"},{"size":168,"mtime":1670224140000,"results":"26","hashOfConfig":"22"},{"size":4426,"mtime":1670224140000,"results":"27","hashOfConfig":"22"},{"size":3813,"mtime":1670224140000,"results":"28","hashOfConfig":"22"},{"size":7567,"mtime":1670224140000,"results":"29","hashOfConfig":"22"},{"size":1938,"mtime":1670224140000,"results":"30","hashOfConfig":"22"},{"size":4049,"mtime":1670224140000,"results":"31","hashOfConfig":"22"},{"size":10759,"mtime":1670224140000,"results":"32","hashOfConfig":"22"},{"size":199,"mtime":1670224140000,"results":"33","hashOfConfig":"22"},{"size":304,"mtime":1670224140000,"results":"34","hashOfConfig":"22"},{"size":3148,"mtime":1670224140000,"results":"35","hashOfConfig":"22"},{"size":4804,"mtime":1670224140000,"results":"36","hashOfConfig":"22"},{"size":1785,"mtime":1670224140000,"results":"37","hashOfConfig":"22"},{"size":1285,"mtime":1670224140000,"results":"38","hashOfConfig":"22"},{"size":5307,"mtime":1670224140000,"results":"39","hashOfConfig":"22"},{"size":8510,"mtime":1670224140000,"results":"40","hashOfConfig":"22"},{"size":2278,"mtime":1670224140000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"37bqy4",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/index.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/App.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/reportWebVitals.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/Routes.js",["115","116"],[],"import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport NotFound from \"./containers/NotFound\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport Theatres from \"./containers/Theatres\";\nimport Movies from \"./containers/Movies\";\nimport Showtimes from \"./containers/Showtimes\";\nimport Seats from \"./containers/Seats\";\nimport Seats2 from \"./containers/Seats2\";\nimport Payment from \"./containers/Payment\";\nimport Account from \"./containers/Account\";\nimport AnnualFee from \"./containers/AnnualFee\";\nimport Admin from \"./containers/Admin\";\nimport AdminLogin from \"./containers/AdminLogin\";\nimport SearchMovie from \"./containers/SearchMovie\";\n\nexport default function Links() {\n  return (\n    <Routes>\n        {/* <Route path=\"/movie-ticket-system/\" element={<Home />} /> */}\n        <Route path=\"/movie-ticket-system/\" element={<Login />} />\n        <Route path=\"/movie-ticket-system/signup\" element={<Signup />} />\n        <Route path=\"/movie-ticket-system/theatres\" element={<Theatres />} />\n        <Route path=\"/movie-ticket-system/movies\" element={<Movies />} />\n        <Route path=\"/movie-ticket-system/showtimes\" element={<Showtimes />} />\n        <Route path=\"/movie-ticket-system/seats\" element={<Seats />} />\n        <Route path=\"/movie-ticket-system/payment\" element={<Payment />} />\n        <Route path=\"/movie-ticket-system/account\" element={<Account />} />\n        <Route path=\"/movie-ticket-system/annualfee\" element={<AnnualFee />} />\n        <Route path=\"/movie-ticket-system/admin\" element={<Admin />} />\n        <Route path=\"/movie-ticket-system/adminLogin\" element={<AdminLogin />} />\n        <Route path=\"/movie-ticket-system/searchmovie\" element={<SearchMovie />} />\n        {\n          /* Finally, catch all unmatched routes */\n        }\n        <Route path=\"*\" element={<NotFound />} />;\n    </Routes>\n  );\n}","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/lib/contextLib.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Signup.js",["117","118","119"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport \"./Signup.css\";\n\nexport default function Signup() {\n  const nav = useNavigate();\n\n  // React States\n  const [isError, setIsError] = useState(false);\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { userHasAuthenticated } = useAppContext();\n\n  const [userDB, setUserDB] = useState();\n\n  const errors = {\n    uname: \"email address already exists\",\n    pass: \"invalid password\"\n  };\n\n  useEffect(() => {\n\t\t// get registered users\n    fetch(\"http://localhost:8080/api/v1/registereduser/all\", {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setUserDB(data);\n        })\n        .catch(() => {\n          console.log(\"Error\");\n        });\n\t}, []);\n\n  const handleSubmit = (event) => {\n      //Prevent page reload\n      event.preventDefault();\n\n      var { uname, pass, nme, addr, ccv, crdnum, expir } = document.forms[0];\n\n      // Find user login info\n      const userData = userDB?.find((user) => user.email === uname.value);\n\n      // Compare user info\n      if (userData) {\n        // Email found\n        setErrorMessages({ name: \"uname\", message: errors.uname });\n        console.log(\"Error. Email Address Exists.\");\n      } else {\n        // Email not found\n        const newUser = {\n          email: uname.value,\n          password: pass.value,\n          name: nme.value,\n          address: addr.value,\n          ccv: ccv.value,\n          cardNo: crdnum.value,\n          expiry: expir.value,\n          accountBalance: 100\n        };\n        console.log(newUser);\n        fetch(\"http://localhost:8080/api/v1/registereduser/add\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(newUser),\n        })\n          .then(() => {\n            console.log(newUser);\n            console.log(\"New User Added\");\n            setIsSubmitted(true);\n            setIsError(false);\n          })\n          .catch(() => {\n            console.log(\"Error\");\n            setIsError(true);\n            setIsSubmitted(false);\n          });\n      }\n  };\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n  );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Email Address </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Name </label>\n          <input type=\"text\" name=\"nme\" required />\n          {renderErrorMessage(\"nme\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Address </label>\n          <input type=\"text\" name=\"addr\" required />\n          {renderErrorMessage(\"addr\")}\n        </div>\n        <div className=\"input-container\">\n          <label>CCV </label>\n          <input type=\"text\" name=\"ccv\" required />\n          {renderErrorMessage(\"nme\")}\n        </div>\n        <div className=\"input-container\">\n          <label>CardNumber </label>\n          <input type=\"text\" name=\"crdnum\" required />\n          {renderErrorMessage(\"nme\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Expiry </label>\n          <input type=\"text\" name=\"expir\" required />\n          {renderErrorMessage(\"nme\")}\n        </div>\n        <div className=\"button-container\">\n        <Button variant=\"contained\" onClick={handleSubmit}>\n          Submit\n        </Button>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"login-form\">\n        <div className=\"title\">Sign Up</div>\n        {isSubmitted ? <div>You've successfully signed up! Please login.</div> : renderForm}\n      </div>\n    </div>\n  );\n}","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Login.js",["120","121"],[],"import React, { useState, useEffect } from \"react\";\nimport { useAppContext } from \"../lib/contextLib\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport \"./Login.css\";\nexport var userInfo = undefined;\n\nexport default function Login() {\n  const nav = useNavigate();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { userHasAuthenticated } = useAppContext();\n  const { adminAuth } = useAppContext();\n  const { notPaid } = useAppContext();\n\n  const [userDB, setUserDB] = useState();\n\n  const errors = {\n    uname: \"invalid email address\",\n    pass: \"invalid password\"\n  };\n\n  useEffect(() => {\n\t\t// get registered users\n    fetch(\"http://localhost:8080/api/v1/registereduser/all\", {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setUserDB(data);\n        })\n        .catch(() => {\n          console.log(\"Error\");\n        });\n\t}, []);\n\n  const handleSubmit = (event) => {\n      //Prevent page reload\n      event.preventDefault();\n\n      var { uname, pass } = document.forms[0];\n\n      // Find user login info\n      const userData = userDB?.find((user) => user.email === uname.value);\n\n      // Compare user info\n      if (userData) {\n        if (userData.password !== pass.value) {\n          // Invalid password\n          setErrorMessages({ name: \"pass\", message: errors.pass });\n          console.log(\"Error. Invalid Password.\");\n        } else {\n          userInfo = userData;\n          setIsSubmitted(true);\n          userHasAuthenticated(true)\n          adminAuth(false)\n          var d1 = Date.parse(userData.dateRegistered)\n          var d2 = Date.parse(\"2022-12-01\")\n          console.log(d1)\n          console.log(d2)\n          if (d1 > d2) {\n            nav(\"/movie-ticket-system/theatres\");\n          } else {\n            notPaid(true);\n            nav(\"/movie-ticket-system/annualfee\");\n          }\n        }\n      } else {\n        // Email not found\n        setErrorMessages({ name: \"uname\", message: errors.uname });\n        console.log(\"Error. Invalid Email.\");\n      }\n  };\n\n  const guestHandle = (event) => {\n    event.preventDefault();\n    const uname = \"guest\";\n    const pass = \"guest\";\n    userInfo = userDB[2];\n    setIsSubmitted(true);\n    userHasAuthenticated(true)\n    adminAuth(false)\n    nav(\"/movie-ticket-system/theatres\");\n};\n\n  // Generate JSX code for error message\n  const renderErrorMessage = (name) =>\n    name === errorMessages.name && (\n      <div className=\"error\">{errorMessages.message}</div>\n  );\n\n  // JSX code for login form\n  const renderForm = (\n    <div className=\"form\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label>Email Address </label>\n          <input type=\"text\" name=\"uname\" required />\n          {renderErrorMessage(\"uname\")}\n        </div>\n        <div className=\"input-container\">\n          <label>Password </label>\n          <input type=\"password\" name=\"pass\" required />\n          {renderErrorMessage(\"pass\")}\n        </div>\n        <div className=\"input-container\">\n          <Link onClick={guestHandle}>\n            Continue as Guest\n          </Link>\n        </div>\n        <div className=\"button-container\">\n          <Button variant=\"contained\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      <div className=\"login-form\">\n        <div className=\"title\">Login</div>\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n      </div>\n    </div>\n  );\n}","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Payment.js",["122","123","124","125","126","127","128","129","130","131","132"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { userInfo } from \"./Login.js\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nvar totalPrice = 0.00;\nexport var paymentInfo = undefined;\n\n\nexport default function Payment() {\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isSubmitted2, setIsSubmitted2] = useState(false);\n  const [isCancelled, setIsCancelled] = useState(false);\n  const [isGuest, setIsGuest] = useState(false);\n  const [cardNo,setCardNo] = useState('')\n  const [expiry,setExpiry] = useState('')\n  const [cvv,setCvv] = useState('')\n  const [name,setName] = useState('')\n  const [price,setPrice] = useState('')\n  const [balance,setBalance] = useState([])\n\n  const [tickets,setTickets] = useState([])\n  const [checked, setChecked] = useState([]);\n\n  function sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\n  useEffect(()=>{\n    if (userInfo.id === 3) {\n        setIsGuest(true)\n    }\n    fetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n    .then(res=>res.json())\n    .then(result=>{\n      setTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n    })\n  },[])\n\n  useEffect(()=>{\n    totalPrice = tickets.length * 10;\n    setPrice(totalPrice);\n    console.log(tickets.length);\n  },[tickets])\n\n  useEffect(()=>{\n\t\tif (isSubmitted2 === true) {\n\t\t\tuserInfo.accountBalance = balance;\n\t\t\tsetIsSubmitted2(false);\n\t\t}\n\t  },[isSubmitted2])\n\n  const handleClick=(e)=>{\n    e.preventDefault()\n\n    const creditCard = {cardNo, expiry, cvv, name}\n      paymentInfo = creditCard\n      console.log(creditCard)\n      console.log(userInfo.cardNo)\n    // TODO: send data to database\n    fetch(`http://localhost:8080/api/v1/payment/addPayment/${userInfo.id}/${price}`,\n        {\n          method:\"PUT\",\n          headers:{\"Content-Type\":\"application/json\"},\n          body:JSON.stringify(creditCard)\n        }).then(()=>{\n      console.log(\"Payment Successful\")\n      setIsSubmitted(true);\n      setIsError(false);\n      \n      console.log(\"getting user info\")\n      fetch(`http://localhost:8080/api/v1/registereduser/getUser/${userInfo.id}`)\n      .then(res=>res.json())\n      .then(result=>{\n        console.log(result)\n        userInfo.accountBalance = result;\n      })\n    })\n    .catch(() => {\n      console.log(\"err2\");\n      setIsError(true);\n      setIsSubmitted(false);\n    }).catch(()=>{\n      console.log(\"Error\")\n      setIsError(true);\n      setIsSubmitted(false);\n    })\n}\n\n  const handleDelete = (e) => {\n    e.preventDefault()\n    const id = [];\n    var userId = userInfo.id;\n    for (var i = 0; i < checked.length; i++) {\n      id.push(tickets[checked[i]].id);\n    }\n    console.log(id)\n    var refundAmount = refundAmount = id.length * 10;\n\t\tif(userId === 3) {\n\t\t\trefundAmount = refundAmount * 0.85;\n\t\t}\n\n    for (var i = 0; i < id.length; i++) {\n    fetch(\"http://localhost:8080/api/v1/ticket/delete/\"+id[i], {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n        .then(() => {\n          console.log(\"Ticket Deleted From User\");\n          setIsCancelled(true)\n          setIsSubmitted(true);\n          setIsError(false);\n\n          console.log(\"getting user info\")\n\t\t\t\t\tfetch(`http://localhost:8080/api/v1/registereduser/getUser/${userInfo.id}`)\n\t\t\t\t\t.then(res=>res.json())\n\t\t\t\t\t.then(result=>{\n\t\t\t\t\t\tsetBalance(result)\n\t\t\t\t\t\tsetIsSubmitted2(true)\n\t\t\t\t\t\tconsole.log(result)\n\t\t\t\t\t})\n\n\t\t\t\t\tfetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n\t\t\t\t\t.then(res=>res.json())\n\t\t\t\t\t.then(result=>{\n\t\t\t\t\t\tsetTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n\t\t\t\t\t\tsetChecked([]);\n\t\t\t\t\t})\n        })\n        .catch(() => {\n          console.log(\"err2\");\n          setIsCancelled(false)\n          setIsError(true);\n          setIsSubmitted(false);\n        })\n      }\n\n      fetch(`http://localhost:8080/api/v1/payment/addRefundPayment/${refundAmount}/${userInfo.id}`,\n\t\t{\n\t\tmethod:\"PUT\"\n\t\t}).then(()=>{\n\t\t\tconsole.log(\"Refund Successful\")\n\t\t})\n\n  };\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  return (\n    <Container>\n\n      <Paper elevation={3} style={paperStyle}>\n        <h1>Congratulations!</h1>\n        <p>You paid ${totalPrice}<br></br>Please check your email</p>\n\n    \n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: 500, maxWidth: '100%' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        {/* {isGuest ? (\n        <>\n        <TextField required id=\"outlined-required\" label=\"Credit Card Number\" variant=\"outlined\" fullWidth\n        value = {cardNo}\n        onChange={(e)=>setCardNo(e.target.value)}\n        />\n        <TextField required id=\"outlined-required\" label=\"Expiry Date (MMYY)\" variant=\"outlined\" fullWidth\n        value = {expiry}\n        onChange={(e)=>setExpiry(e.target.value)}\n        />\n        <TextField required id=\"outlined-required\" label=\"CVV\" variant=\"outlined\" fullWidth\n        value = {cvv}\n        onChange={(e)=>setCvv(e.target.value)}\n        />\n        <TextField required id=\"outlined-required\" label=\"Cardholder Name\" variant=\"outlined\" fullWidth\n        value = {name}\n        onChange={(e)=>setName(e.target.value)}\n        />\n        </>) : (\n          ''\n        )} */}\n        \n        {/* <Button variant=\"contained\" onClick={handleClick}>\n          Pay\n        </Button> */}\n      </Box>\n    </Paper>\n\n      \n\n      <Paper elevation={3} style={paperStyle}>\n      <h1>Tickets</h1>\n        {tickets.map((ticket,i) =>( \n          <ListItemButton role={undefined} onClick={handleToggle(i)} key={ticket.id} dense>\n            <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={checked.indexOf(i) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                />\n              </ListItemIcon>\n            <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}}>\n              ID:{ticket.id} <br></br>\n              Theatre:{ticket.theatre} <br></br>\n              Movie:{ticket.movie} <br></br>\n              Showtime:{ticket.showtime} <br></br>\n              Seat:{ticket.seatDesc}\n            </Paper>\n          </ListItemButton>\n          ))}\n          <br></br>\n          <Box textAlign='center'>\n            <Button variant=\"contained\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Box>\n      </Paper>\n\n      <Paper elevation={3} style={paperStyle}>\n        <h1>Response</h1>\n        {isSubmitted ? <div>Cancellation Successful! Please check your email.</div> : \n                        <div></div>}\n        {isError ? <div>Error. Please try again.</div> : \n                        <div></div>}\n      </Paper>\n    </Container>\n  );\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Showtimes.js",["133","134","135","136","137","138","139","140","141","142","143"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { theatreSelected } from \"./Theatres.js\";\nimport { movieSelected } from \"./Movies.js\";\nexport var stSelected = undefined;\n\nexport default function Showtimes() {\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showtimes,setShowtimes] = useState([])\n  const [tId,settId] = useState('')\n  const [mId,setmId] = useState('')\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8080/api/v1/theatres/\"+theatreSelected.tId+\"/showtimes/\"+movieSelected.mId)\n    .then(res=>res.json())\n    .then(result=>{\n      setShowtimes(sortByKey(JSON.parse(JSON.stringify(result)), \"sId\"));\n    })\n  },[])\n\n  const clickHandle = (i) =>{\n    stSelected = showtimes[i];\n    console.log(stSelected);\n  }\n\n  function sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\n  return (\n    <Container>\n      <Paper elevation={3} style={paperStyle}>\n      <h1>Showtimes</h1>\n      <p>\n        Theatre:{theatreSelected.name} <br></br>\n        Movie:{movieSelected.name}\n      </p>\n        {showtimes.map((showtime,i)=>(\n        <Link to={'/movie-ticket-system/seats'} onClick={() => clickHandle(i)} key={showtime.sId}>\n          <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}}> \n            ID:{showtime.sId} <br></br>\n            Start Time:{showtime.showtime}\n          </Paper>\n        </Link>\n        ))}\n      </Paper>\n     \n    </Container>\n  );\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/AnnualFee.js",["144","145","146","147","148","149","150","151","152","153","154"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { userInfo } from \"./Login.js\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppContext } from \"../lib/contextLib\";\nvar totalPrice = 20.00;\nexport var paymentInfo = undefined;\n\n\nexport default function AnnualFee() {\n  const nav = useNavigate();\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [cardNo,setCardNo] = useState('')\n  const [expiry,setExpiry] = useState('')\n  const [cvv,setCvv] = useState('')\n  const [name,setName] = useState('')\n  const [price,setPrice] = useState('')\n\n  const { notPaid } = useAppContext();\n\n  useEffect(()=>{\n    setPrice(totalPrice)\n  },[])\n\n  function sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\n  const handleClick=async (e)=>{\n    e.preventDefault()\n    \n    const creditCard = {cardNo, expiry, cvv, name}\n      paymentInfo = creditCard\n      console.log(creditCard)\n      console.log(userInfo.cardNo)\n    // TODO: send data to database\n    await fetch(\"http://localhost:8080/api/v1/registereduser/\"+userInfo.id+\"/setDate\", {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(\"Date Updated\");\n        notPaid(false);\n        fetch(\"http://localhost:8080/api/v1/registereduser/\"+userInfo.email, {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n          })\n            .then((response) => {\n              return response.json();\n            })\n            .then((data) => {\n              console.log(\"Data\")\n              console.log(data)\n              userInfo.dateRegistered = data.dateRegistered;\n            })\n            .catch(() => {\n              console.log(\"Error\");\n            });\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log(\"Error\");\n\t\t\t});\n\n    await fetch(`http://localhost:8080/api/v1/payment/addPayment/${userInfo.id}/${price}`,\n        {\n          method:\"PUT\",\n          headers:{\"Content-Type\":\"application/json\"},\n          body:JSON.stringify(creditCard)\n        }).then(()=>{\n      console.log(\"Payment Successful\")\n      setIsSubmitted(true);\n      setIsError(false);\n      \n      console.log(\"getting user info\")\n      fetch(`http://localhost:8080/api/v1/registereduser/getUser/${userInfo.id}`)\n      .then(res=>res.json())\n      .then(result=>{\n        console.log(result)\n        userInfo.accountBalance = result;\n        nav(\"/movie-ticket-system/theatres\");\n      })\n    })\n    .catch(() => {\n      console.log(\"err2\");\n      setIsError(true);\n      setIsSubmitted(false);\n    }).catch(()=>{\n      console.log(\"Error\")\n      setIsError(true);\n      setIsSubmitted(false);\n    })\n}\n\n  return (\n    <Container>\n      <Paper elevation={3} style={paperStyle}>\n        <h1>Annual Fee Payment</h1>\n        <p>Your total is ${totalPrice}</p>\n\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: 500, maxWidth: '100%' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      \n      <Button variant=\"contained\" onClick={handleClick}>\n        Pay\n      </Button>\n    </Box>\n    </Paper>\n\n      {/* <Paper elevation={3} style={paperStyle}>\n        <h1>Response</h1>\n        {isSubmitted ? <div>Payment Successful! Please check your email.</div> : \n                        <div></div>}\n        {isError ? <div>Error. Please try again.</div> : \n                        <div></div>}\n      </Paper> */}\n    </Container>\n  );\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Admin.js",["155","156","157","158","159","160","161","162","163","164"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useEffect } from \"react\";\nimport { flexbox } from \"@mui/system\";\nimport { userInfo } from \"./AdminLogin.js\";\nimport { globalTickets } from \"./Payment.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nexport default function Admin() {\n\n\tconst [movies,setMovies] = useState([])\n\tconst [staff,setStaff] = useState([])\n\tconst [users,setUsers] = useState([])\n\n\tconst [staffId,setStaffId] = useState([])\n\tconst [userId,setUserId] = useState([])\n\tconst [movieId,setMovieId] = useState([])\n\n\tconst [Name,setName] = useState([])\n\tconst [Email,setEmail] = useState([])\n\tconst [Password,setPassword] = useState([])\n\n\tconst [UserName,setUserName] = useState([])\n\tconst [UserEmail,setUserEmail] = useState([])\n\tconst [UserPassword,setUserPassword] = useState([])\n\tconst [Address,setAddress] = useState([])\n\tconst [CCV,setCCV] = useState([])\n\tconst [CardNo,setCardNo] = useState([])\n\tconst [Expiry,setExpiry] = useState([])\n\tconst [AccountBalance,setAccountBalance] = useState([])\n\n\tconst [MovieName,setMovieName] = useState([])\n\tconst [ReleaseDate,setReleaseDate] = useState([])\n\n\tconst paperStyle = {\n\t\tpadding: \"50px 20px\",\n\t\twidth: 600,\n\t\tmargin: \"20px auto\",\n\t};\n\n\tasync function getMovies() {\n\t\tconst response = await fetch(\"http://localhost:8080/api/v1/admin/allMovies\")\n        const data = await response.json()\n\t\tsetMovies(data)\n\t}\n\n\tasync function getStaff() {\n\t\tconst response = await fetch(\"http://localhost:8080/api/v1/admin/allStaff\")\n        const data = await response.json()\n\t\tsetStaff(data)\n\t}\n\n\tasync function getUsers() {\n\t\tconst response = await fetch(\"http://localhost:8080/api/v1/admin/allRegisteredUsers\")\n        const data = await response.json()\n\t\tsetUsers(data)\n\t}\n\n\tuseEffect(()=>{ \n\t\tgetMovies()\n\t\tgetStaff()\n\t\tgetUsers()\n\t  },[]);\n\n\n\tasync function addStaffFunc() {\n\t\tvar body = {name: Name, email: Email, password: Password}\n\t\t// console.log(body)\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(body)\n\t\t}\n\t\tfetch('http://localhost:8080/api/v1/admin/addAdminStaff', options)\n\t\t.then((response) => {\n\t\t\tvar test = Math.random() // to render the page since the messages are coming through as undefined and not changing the output box value\n\t\t\tdocument.getElementsByName('staffDisplay')[0].value= test // remove this line and replace with below\n\t\t\t// document.getElementsByName('display')[0].value= response\n\t\t  })\n\t\t.then(getStaff())\n\t}\n\n\tconst addStaff=(e)=>{e.preventDefault()\n\t\taddStaffFunc()\n\t}\n\n\tasync function removeStaffFunc() {\n\t\tvar body = staff.find(item => item.id === Number(staffId));\n\t\tconst options = {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(body)\n\t\t}\n\t\tconst response = await fetch('http://localhost:8080/api/v1/admin/removeAdminStaff', options)\n\t\tvar test = Math.random() // to render the page since the messages are coming through as undefined and not changing the output box value\n\t\tdocument.getElementsByName('staffDisplay')[0].value= test // remove this line and replace with below\n\t\t// document.getElementsByName('display')[0].value= response\n\t\tgetStaff()\n\t}\n\n\tconst removeStaff=(e)=>{e.preventDefault()\n\t\tremoveStaffFunc()\n\t}\n\n\tasync function addUserFunc() {\n\t\tvar body = {name: UserName, email: UserEmail, password: UserPassword, address: Address, ccv: CCV, cardNo: CardNo, expiry: Expiry, accountBalance: AccountBalance}\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(body)\n\t\t}\n\t\tconsole.log(body)\n\t\tfetch('http://localhost:8080/api/v1/admin/addRegisteredUser', options)\n\t\t.then((response) => {\n\t\t\tvar test = Math.random() // to render the page since the messages are coming through as undefined and not changing the output box value\n\t\t\tdocument.getElementsByName('userDisplay')[0].value= test // remove this line and replace with below\n\t\t\t// document.getElementsByName('display')[0].value= response\n\t\t  })\n\n\t\t.then(getUsers())\n\t}\n\n\tconst addUser=(e)=>{e.preventDefault()\n        addUserFunc()\n    }\n\t\n\tasync function removeUserFunc() {\n\t\tvar body = users.find(item => item.id === Number(userId));\n\t\tconst options = {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(body)\n\t\t}\n\t\tconst response = await fetch('http://localhost:8080/api/v1/admin/removeRegisteredUser', options)\n\t\tvar test = Math.random() // to render the page since the messages are coming through as undefined and not changing the output box value\n\t\tdocument.getElementsByName('userDisplay')[0].value= test // remove this line and replace with below\n\t\t// document.getElementsByName('display')[0].value= response\n\t\tgetUsers()\n\t}\n\n\tconst removeUser=(e)=>{e.preventDefault()\n        removeUserFunc()\n    }\n\n\tasync function addMovieFunc() {\n\t\tvar body = {name: MovieName, releaseDate: ReleaseDate}\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(body)\n\t\t}\n\t\tfetch('http://localhost:8080/api/v1/admin/addMovie', options)\n\t\t.then((response) => {\n\t\t\tvar test = Math.random() // to render the page since the messages are coming through as undefined and not changing the output box value\n\t\t\tdocument.getElementsByName('movieDisplay')[0].value= test // remove this line and replace with below\n\t\t\t// document.getElementsByName('display')[0].value= response\n\t\t  })\n\n\t\t.then(getMovies())\n\t}\n\n\tconst addMovie=(e)=>{e.preventDefault()\n        addMovieFunc()\n    }\n\t\n\tasync function removeMovieFunc() {\n\t\tvar body = movies.find(item => item.id === Number(movieId));\n\t\tconst options = {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify(body)\n\t\t}\n\t\tconst response = await fetch('http://localhost:8080/api/v1/admin/removeMovie', options)\n\t\tvar test = Math.random() // to render the page since the messages are coming through as undefined and not changing the output box value\n\t\tdocument.getElementsByName('movieDisplay')[0].value= test // remove this line and replace with below\n\t\t// document.getElementsByName('display')[0].value= response\n\t\tgetUsers()\n\t}\n\n\tconst removeMovie=(e)=>{e.preventDefault()\n        removeMovieFunc()\n    }\n\n\treturn (\n\t\t<Container>\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Account Information</h1>\n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n\t\t\t\t\tId:{userInfo.id} <br></br>\n\t\t\t\t\tEmail Address:{userInfo.email} <br></br>\n\t\t\t\t\tPassword:{userInfo.password} <br></br>\n\t\t\t\t\tName:{userInfo.name} <br></br>\n\t\t\t\t</Paper>\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Movies</h1>\n\t\t\t{movies.map((movie) =>(\n        \n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={movie.mId}>\n\t\t\t\tId:{movie.mId} <br></br>\n\t\t\t\tMovie:{movie.name} <br></br>\n\t\t\t\t</Paper>\n\n\t\t\t))}\n\n\t\t\t<br/><br/>\n\n\t\t\t<input type=\"text\" placeholder=\"Movie Id\" \n            value={movieId} \n            onChange={(e)=>setMovieId(e.target.value)}/>\n\t\t\t<button onClick={removeMovie} > Remove Movie </button>\n\t\t\t<br/><br/>\n\n\t\t\t<input type=\"text\" placeholder=\"Name\" \n            value={MovieName}\n            onChange={(e)=>setMovieName(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"ReleaseDate\" \n            value={ReleaseDate}\n            onChange={(e)=>setReleaseDate(e.target.value)}/>\n\n\t\t\t<button onClick={addMovie} > Add Movie </button>\n\t\t\t<br/><br/>\n\t\t\t<label htmlFor=\"displayValue\"> Output: </label>\n            <input type=\"textarea\" name=\"movieDisplay\"></input>\n\t\t\t<br/><br/>\n\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Staff</h1>\n\t\t\t{staff.map((staffMember) =>(\n        \n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={staffMember.id}>\n\t\t\t\tId:{staffMember.id} <br></br>\n\t\t\t\tName:{staffMember.name} <br></br>\n\t\t\t\tEmail:{staffMember.email} <br></br>\n\t\t\t\t</Paper>\n\n\t\t\t))}\n\t\t\t\n\t\t\t<br/><br/>\n\t\t\t<input type=\"number\" placeholder=\"Staff Id\" \n            value={staffId} \n            onChange={(e)=>setStaffId(e.target.value)}/>\n\t\t\t<button onClick={removeStaff} > Remove Staff </button>\n\t\t\t<br/><br/>\n\n\t\t\t<input type=\"text\" placeholder=\"Name\" \n            value={Name}\n            onChange={(e)=>setName(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Email\" \n            value={Email}\n            onChange={(e)=>setEmail(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Password\" \n            value={Password}\n            onChange={(e)=>setPassword(e.target.value)}/>\n\n\t\t\t<button onClick={addStaff} > Add Staff </button>\n\t\t\t<br/><br/>\n\t\t\t<label htmlFor=\"displayValue\"> Output: </label>\n            <input type=\"textarea\" name=\"staffDisplay\"></input>\n\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Registered Users</h1>\n\t\t\t{users.map((user) =>(\n        \n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} key={user.id}>\n\t\t\t\tId:{user.id} <br></br>\n\t\t\t\tName:{user.name} <br></br>\n\t\t\t\tEmail:{user.email} <br></br>\n\t\t\t\t</Paper>\n\n\t\t\t))}\n\n\n\t\t\t<br/><br/>\n\t\t\t<input type=\"text\" placeholder=\"User Id\" \n            value={userId} \n            onChange={(e)=>setUserId(e.target.value)}/>\n\t\t\t<button onClick={removeUser} > Remove User </button>\n\t\t\t<br/><br/>\n\n\t\t\t<input type=\"text\" placeholder=\"Name\" \n            value={UserName}\n            onChange={(e)=>setUserName(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Email\" \n            value={UserEmail}\n            onChange={(e)=>setUserEmail(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Password\" \n            value={UserPassword}\n            onChange={(e)=>setUserPassword(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Address\" \n            value={Address}\n            onChange={(e)=>setAddress(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"CCV\" \n            value={CCV}\n            onChange={(e)=>setCCV(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"CardNo\" \n            value={CardNo}\n            onChange={(e)=>setCardNo(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"Expiry\" \n            value={Expiry}\n            onChange={(e)=>setExpiry(e.target.value)}/>\n\t\t\t<input type=\"text\" placeholder=\"AccountBalance\" \n            value={AccountBalance}\n            onChange={(e)=>setAccountBalance(e.target.value)}/>\n\n\n\t\t\t<button onClick={addUser} > Add User </button>\n\t\t\t<br/><br/>\n\t\t\t<label htmlFor=\"displayValue\"> Output: </label>\n            <input type=\"textarea\" name=\"userDisplay\"></input>\n\n\t\t\t</Paper>\n\n\t\t</Container>\n\t);\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/NotFound.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Home.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/AdminLogin.js",[],[],"/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Seats2.js",["165","166"],[],"import './Seats2.css'\nimport React, { useState } from 'react'\nimport clsx from 'clsx'\nimport Button from '@mui/material/Button';\nimport { useNavigate } from \"react-router-dom\";\nimport { theatreSelected } from \"./Theatres.js\";\nimport { movieSelected } from \"./Movies.js\";\nimport { stSelected } from \"./Showtimes.js\";\n\nconst s= 'test4'\nconst p=20.00\n\nconst movies = [\n  {\n    name: 'Avenger',\n    price: 10,\n    occupied: [20, 21, 30, 1, 2, 8],\n  },\n  {\n    name: 'Joker',\n    price: 12,\n    occupied: [9, 41, 35, 11, 65, 26],\n  },\n  {\n    name: 'Toy story',\n    price: 8,\n    occupied: [37, 25, 44, 13, 2, 3],\n  },\n  {\n    name: 'the lion king',\n    price: 9,\n    occupied: [10, 12, 50, 33, 28, 47],\n  },\n]\n\nconst seats = Array.from({ length: 8 * 8 }, (_, i) => i)\n\nexport default function Seats2() {\n    const nav = useNavigate();\n  const [selectedMovie, setSelectedMovie] = useState(movies[0])\n  const [selectedSeats, setSelectedSeats] = useState([])\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleClick=(e)=>{\n    e.preventDefault()\n    const ticket={\n      theatre: theatreSelected.name, \n      movie: movieSelected.name, \n      showtime: stSelected.showtime, \n      seat: s, \n      price: p}\n    console.log(ticket)\n    // TODO: send data to database\n    fetch(\"http://localhost:8080/api/v1/ticket/add\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(ticket),\n        })\n          .then(() => {\n            console.log(ticket);\n            console.log(\"Ticket Created\");\n            setIsSubmitted(true);\n            setIsError(false);\n            nav(\"/movie-ticket-system/payment\");\n          })\n          .catch(() => {\n            console.log(\"Error\");\n            setIsError(true);\n            setIsSubmitted(false);\n          });\n  }\n\n  return (\n    <div className=\"App\">\n      <Movies\n        movie={selectedMovie}\n        onChange={movie => {\n          setSelectedSeats([])\n          setSelectedMovie(movie)\n        }}\n      />\n      <ShowCase />\n      <Cinema\n        movie={selectedMovie}\n        selectedSeats={selectedSeats}\n        onSelectedSeatsChange={selectedSeats => setSelectedSeats(selectedSeats)}\n      />\n\n      <p className=\"info\">\n        You have selected <span className=\"count\">{selectedSeats.length}</span>{' '}\n        seats for the price of{' '}\n        <span className=\"total\">\n          {selectedSeats.length * selectedMovie.price}$\n        </span>\n      </p>\n      <Button variant=\"contained\" onClick={handleClick}>\n        Submit\n      </Button>\n    </div>\n  )\n}\n\nfunction Movies({ movie, onChange }) {\n  // return (\n  //   <div className=\"Movies\">\n  //     <label htmlFor=\"movie\">Pick a movie</label>\n  //     <select\n  //       id=\"movie\"\n  //       value={movie.name}\n  //       onChange={e => {\n  //         onChange(movies.find(movie => movie.name === e.target.value))\n  //       }}\n  //     >\n  //       {movies.map(movie => (\n  //         <option key={movie.name} value={movie.name}>\n  //           {movie.name} (${movie.price})\n  //         </option>\n  //       ))}\n  //     </select>\n  //   </div>\n  // )\n}\n\nfunction ShowCase() {\n  return (\n    <ul className=\"ShowCase\">\n      <li>\n        <span className=\"seat\" /> <small>N/A</small>\n      </li>\n      <li>\n        <span className=\"seat selected\" /> <small>Selected</small>\n      </li>\n      <li>\n        <span className=\"seat occupied\" /> <small>Occupied</small>\n      </li>\n    </ul>\n  )\n}\n\nfunction Cinema({ movie, selectedSeats, onSelectedSeatsChange }) {\n  function handleSelectedState(seat) {\n    const isSelected = selectedSeats.includes(seat)\n    if (isSelected) {\n      onSelectedSeatsChange(\n        selectedSeats.filter(selectedSeat => selectedSeat !== seat),\n      )\n    } else {\n      onSelectedSeatsChange([...selectedSeats, seat])\n    }\n  }\n\n  return (\n    <div className=\"Cinema\">\n      <div className=\"screen\" />\n\n      <div className=\"seats\">\n        {seats.map(seat => {\n          const isSelected = selectedSeats.includes(seat)\n          const isOccupied = movie.occupied.includes(seat)\n          return (\n            <span\n              tabIndex=\"0\"\n              key={seat}\n              className={clsx(\n                'seat',\n                isSelected && 'selected',\n                isOccupied && 'occupied',\n              )}\n              onClick={isOccupied ? null : () => handleSelectedState(seat)}\n              onKeyPress={\n                isOccupied\n                  ? null\n                  : e => {\n                      if (e.key === 'Enter') {\n                        handleSelectedState(seat)\n                      }\n                    }\n              }\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Movies.js",["167","168","169","170","171"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { theatreSelected } from \"./Theatres.js\";\n\nexport var movieSelected = undefined;\n\nexport default function Movies() {\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [movies,setMovies] = useState([])\n  const [tId,settId] = useState('')\n\n  useEffect(()=>{\n    fetch( \"http://localhost:8080/api/v1/theatres/\"+theatreSelected.tId+\"/movies/\")  \n    .then(res=>res.json())\n    .then(result=>{\n      setMovies(sortByKey(JSON.parse(JSON.stringify(result)), \"mId\"));\n    })\n  },[])\n\n  const clickHandle = (i) =>{\n    movieSelected = movies[i];\n    console.log(movieSelected)\n  }\n\n  function sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\n  return (\n    <Container>\n      <h1><Link className=\"link\" to='/movie-ticket-system/searchmovie'>Search Movie</Link></h1>\n      <Paper elevation={3} style={paperStyle}>\n      <h1>Movies</h1>\n      <p>Theatre:{theatreSelected.name}</p>\n        {movies.map((movie,i) =>(\n        <Link to={'/movie-ticket-system/showtimes'} onClick={() => clickHandle(i)} key={movie.mId}>\n          <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n            ID:{movie.mId},\n            Name:{movie.name} <br></br>\n            Release Date:{movie.releaseDate}\n          </Paper>\n        </Link>\n        ))}\n      </Paper>\n     \n    </Container>\n  );\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Theatres.js",["172","173","174","175"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { Link, useLinkClickHandler } from 'react-router-dom';\nexport var theatreSelected = undefined;\n\nexport default function Theatres() {\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [theatres,setTheatres] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8080/api/v1/theatres\")\n    .then(res=>res.json())\n    .then(result=>{\n      setTheatres(result);\n    })\n  },[])\n\n  const clickHandle = (i) =>{\n    theatreSelected = theatres[i];\n    console.log(theatreSelected)\n  }\n\n  return (\n    <Container>\n      <Paper elevation={3} style={paperStyle}>\n      <h1>Theatres</h1>\n        {theatres.map((theatre, i)=>( \n        <Link to={'/movie-ticket-system/movies'} onClick={() => clickHandle(i)} key={i}>\n          <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n            ID:{theatre.tId},\n            Name:{theatre.name}\n          </Paper>\n        </Link>\n        ))}\n      </Paper>\n     \n    </Container>\n  );\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Account.js",["176","177","178","179","180","181","182","183"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useEffect } from \"react\";\nimport { flexbox } from \"@mui/system\";\nimport { userInfo } from \"./Login.js\";\nimport {paymentInfo} from \"./Payment.js\"\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport { globalTickets } from \"./Payment.js\";\nvar userType;\n\nexport default function Account() {\n\tconst [isError, setIsError] = useState(false);\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [isSubmitted2, setIsSubmitted2] = useState(false);\n\tconst [isGuest, setIsGuest] = useState(false);\n\tconst [checked, setChecked] = useState([]);\n\tconst [tickets,setTickets] = useState([]);\n\tconst [balance,setBalance] = useState([])\n\t\n\tconst paperStyle = {\n\t\tpadding: \"50px 20px\",\n\t\twidth: 600,\n\t\tmargin: \"20px auto\",\n\t};\n\n\tfunction sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\t\n\tuseEffect(()=>{\n\t\tif (userInfo.id === 3) {\n\t\t\tsetIsGuest(true);\n\t\t}\n\t\t\n\t\tfetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n\t\t.then(res=>res.json())\n\t\t.then(result=>{\n\t\t  setTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n\t\t})\n\t  },[])\n\n\t  useEffect(()=>{\n\t\tif (isSubmitted2 === true) {\n\t\t\tuserInfo.accountBalance = balance;\n\t\t\tsetIsSubmitted2(false);\n\t\t}\n\t  },[isSubmitted2])\n\n\tconst handleDelete = (e) => {\n\t\te.preventDefault()\n\t\tconst id = [];\n\t\tvar userId = userInfo.id;\n\t\tfor (var i = 0; i < checked.length; i++) {\n\t\t\tid.push(tickets[checked[i]].id);\n\t\t}\n\t\tconsole.log(id)\n\t\tvar refundAmount = refundAmount = id.length * 10;\n\t\tif(userId === 3) {\n\t\t\trefundAmount = refundAmount * 0.85;\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < id.length; i++) {\n\t\t\tfetch(\"http://localhost:8080/api/v1/ticket/delete/\"+id[i], {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" }\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tconsole.log(\"Ticket Deleted From User\");\n\t\t\t\t\tsetIsSubmitted(true);\n\t\t\t\t\tsetIsError(false);\n\n\t\t\t\t\tconsole.log(\"getting user info\")\n\t\t\t\t\tfetch(`http://localhost:8080/api/v1/registereduser/getUser/${userInfo.id}`)\n\t\t\t\t\t.then(res=>res.json())\n\t\t\t\t\t.then(result=>{\n\t\t\t\t\t\tsetBalance(result)\n\t\t\t\t\t\tsetIsSubmitted2(true)\n\t\t\t\t\t\tconsole.log(result)\n\t\t\t\t\t})\n\n\t\t\t\t\tfetch(\"http://localhost:8080/api/v1/registereduser/tickets\"+userInfo.email)\n\t\t\t\t\t.then(res=>res.json())\n\t\t\t\t\t.then(result=>{\n\t\t\t\t\t\tsetTickets(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n\t\t\t\t\t\tsetChecked([]);\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tconsole.log(\"err2\");\n\t\t\t\t\tsetIsError(true);\n\t\t\t\t\tsetIsSubmitted(false);\n\t\t\t\t})\n\t\t}\n\n\t\n\t\tfetch(`http://localhost:8080/api/v1/payment/addRefundPayment/${refundAmount}/${userInfo.id}`,\n\t\t{\n\t\tmethod:\"PUT\"\n\t\t}).then(()=>{\n\t\t\tconsole.log(\"Refund Successful\")\n\t\t})\n\t};\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\t\tif (currentIndex === -1) {\n\t\t  newChecked.push(value);\n\t\t} else {\n\t\t  newChecked.splice(currentIndex, 1);\n\t\t}\n\t\tsetChecked(newChecked);\n\t  };\n\n\treturn (\n\t\t<Container>\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Account Information</h1>\n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n\t\t\t\t\tID:{userInfo.id} <br></br>\n\t\t\t\t\tUser Type:{isGuest ? 'Ordinary' : 'Registered'} <br></br>\n\t\t\t\t\tEmail Address:{userInfo.email} <br></br>\n\t\t\t\t\tPassword:{userInfo.password} <br></br>\n\t\t\t\t\tName:{userInfo.name} <br></br>\n\t\t\t\t\tAddress:{userInfo.address} <br></br>\n\t\t\t\t\tDate Registered:{userInfo.dateRegistered} <br></br> <br></br>\n\t\t\t\t\tCard Name:{userInfo.name} <br></br>\n\t\t\t\t\tCard Number:{userInfo.cardNo} <br></br>\n\t\t\t\t\tCard CVV:{userInfo.ccv} <br></br>\n\t\t\t\t\tExpiry (MMYY):{userInfo.expiry} <br></br>\n\t\t\t\t\tAccount Balance:${userInfo.accountBalance} <br></br>\n\t\t\t\t</Paper>\n\t\t\t</Paper>\n\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t<h1>Tickets</h1>\n\t\t\t{tickets.map((ticket,i) =>(\n\t\t\t\t<ListItemButton role={undefined} onClick={handleToggle(i)} key={ticket.id} dense>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t  edge=\"start\"\n\t\t\t\t\t  checked={checked.indexOf(i) !== -1}\n\t\t\t\t\t  tabIndex={-1}\n\t\t\t\t\t  disableRipple\n\t\t\t\t\t/>\n\t\t\t\t  </ListItemIcon>\n\t\t\t\t<Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n\t\t\t\t\tID:{ticket.id} <br></br>\n\t\t\t\t\tTheatre:{ticket.theatre} <br></br>\n\t\t\t\t\tMovie:{ticket.movie} <br></br>\n\t\t\t\t\tShowtime:{ticket.showtime} <br></br>\n\t\t\t\t\tSeat:{ticket.seatDesc}\n\t\t\t\t</Paper>\n\t\t\t\t</ListItemButton>\n\t\t\t))}\n\t\t\t<br></br>\n          <Box textAlign='center'>\n            <Button variant=\"contained\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </Box>\n\t\t\t</Paper>\n\n\t\t<Paper elevation={3} style={paperStyle}>\n        \t<h1>Response</h1>\n        \t{isSubmitted ? <div>Cancellation Successful! Please check your email.</div> : \n                        <div></div>}\n        \t{isError ? <div>Error. Please try again.</div> : \n                        <div></div>}\n      \t</Paper>\n\n\t\t</Container>\n\t);\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/Seats.js",["184","185","186","187","188","189","190","191","192","193","194","195"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { theatreSelected } from \"./Theatres.js\";\nimport { movieSelected } from \"./Movies.js\";\nimport { stSelected } from \"./Showtimes.js\";\nimport { userInfo } from \"./Login.js\";\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Typography from '@mui/material/Typography';\nexport var paymentInfo = undefined;\n\nexport default function Seats() {\n  const nav = useNavigate();\n  const paperStyle = {padding:'50px 20px', width:600, margin:'20px auto'}\n  const [seats,setSeats] = useState([])\n  const [createdTicket,setTicket] = useState(undefined)\n  const [createdSeat,setSeat] = useState(undefined)\n  const [cardNo,setCardNo] = useState('')\n  const [expiry,setExpiry] = useState('')\n  const [cvv,setCvv] = useState('')\n  const [name,setName] = useState('')\n\n  const [isError, setIsError] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [isSubmitted2, setIsSubmitted2] = useState(false);\n  const [isSubmitted3, setIsSubmitted3] = useState(false);\n  const [checked, setChecked] = useState([]);\n  \n\n  function sortByKey(array, key) {\n\t\treturn array.sort(function (a, b) {\n\t\t\tvar x = Number(a[key]);\n\t\t\tvar y = Number(b[key]);\n\t\t\treturn x < y ? -1 : x > y ? 1 : 0;\n\t\t});\n\t}\n\n  // load seats\n  useEffect(()=>{\n    console.log(stSelected.sId)\n    fetch(\"http://localhost:8080/api/v1/theatres/\"+stSelected.sId+\"/seats\")\n    .then(res=>res.json())\n    .then(result=>{\n      setSeats(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n    })\n  },[])\n\n  // add ticket to user\n  useEffect(()=>{\n    console.log(createdTicket)\n    if (createdTicket !== undefined){\n      fetch(\"http://localhost:8080/api/v1/registereduser/\"+createdTicket.id+\"/add/\"+userInfo.email, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n        .then(() => {\n          console.log(\"Ticket Added to User\");\n          setIsSubmitted(true);\n          setIsError(false);\n          fetch(\"http://localhost:8080/api/v1/theatres/\"+stSelected.sId+\"/seats\")\n            .then(res=>res.json())\n            .then(result=>{\n              setSeats(sortByKey(JSON.parse(JSON.stringify(result)), \"id\"));\n            })\n        })\n        .catch(() => {\n          console.log(\"err2\");\n          setIsError(true);\n          setIsSubmitted(false);\n        })\n    }\n  },[createdTicket]);\n\n  // get last created ticket\n  useEffect(()=>{\n      fetch(\"http://localhost:8080/api/v1/ticket/all\")\n      .then(res=>res.json())\n      .then(result=>{\n          setTicket(result[result.length-1])\n          setIsSubmitted2(false)\n      })\n  },[isSubmitted2]);\n\n  const handleSubmit = async (e) => {\n    const id = [];\n    let i=0;\n    for (i; i < checked.length; i++) {\n      id.push(seats[checked[i]].id);\n    }\n    console.log(id)\n\n    i=0;\n    for (i; i < id.length; i++) {\n      var seatSelectedName = undefined;\n      var seatSelectedId = undefined;\n      for (var j = 0; j < seats.length; j++) {\n        if (seats[j].id === id[i]) {\n          seatSelectedName = seats[j].letter_row + seats[j].number_row;\n          seatSelectedId = seats[j].id;\n          const ticket={\n            theatre: theatreSelected.name, \n            movie: movieSelected.name, \n            showtime: stSelected.showtime, \n            seatDesc: seatSelectedName, \n            seat: seatSelectedId,\n            price: 10.00}\n          console.log(ticket)\n          // create ticket\n          await fetch(\"http://localhost:8080/api/v1/ticket/add\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(ticket)\n              })\n                .then(() => {\n                  console.log(ticket);\n                  console.log(\"Ticket Created\");\n                  setIsSubmitted2(true);\n                  setIsError(false);\n                })\n                .catch(() => {\n                  console.log(\"err1\");\n                  setIsError(true);\n                  setIsSubmitted(false);\n                });\n      \n          // change seat status to occupied\n          await fetch(\"http://localhost:8080/api/v1/seat/reserveSeat/\"+seatSelectedId, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" }\n          })\n            .then(() => {\n              console.log(\"Seat is now occupied\");\n              setIsSubmitted(true);\n              setIsError(false);\n            })\n            .catch(() => {\n              console.log(\"err\");\n              setIsError(true);\n              setIsSubmitted(false);\n            })\n          }\n        }\n      }\n  };\n\n  const handleProceed = async () =>{\n    const creditCard = {cardNo, expiry, cvv, name}\n      paymentInfo = creditCard\n      console.log(creditCard)\n      console.log(userInfo.cardNo)\n    // TODO: send data to database\n    await fetch(`http://localhost:8080/api/v1/payment/addPayment/${userInfo.id}/${checked.length*10}`,\n        {\n          method:\"PUT\",\n          headers:{\"Content-Type\":\"application/json\"},\n          body:JSON.stringify(creditCard)\n        }).then(()=>{\n      console.log(\"Payment Successful\")\n      setIsSubmitted(true);\n      setIsError(false);\n      \n      console.log(\"getting user info\")\n      fetch(`http://localhost:8080/api/v1/registereduser/getUser/${userInfo.id}`)\n      .then(res=>res.json())\n      .then(result=>{\n        console.log(result)\n        userInfo.accountBalance = result;\n      })\n    })\n    .catch(() => {\n      console.log(\"err2\");\n      setIsError(true);\n      setIsSubmitted(false);\n    }).catch(()=>{\n      console.log(\"Error\")\n      setIsError(true);\n      setIsSubmitted(false);\n    })\n    nav('/movie-ticket-system/payment')\n  }\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n\n  return (\n    <Container>\n      <Paper elevation={3} style={paperStyle}>\n      <h1>Seats</h1>\n      <p>\n        Theatre:{theatreSelected.name} <br></br>\n        Movie:{movieSelected.name} <br></br>\n        Showtime:{stSelected.showtime} <br></br>\n        Total Price:${checked.length*10}\n      </p>\n      <p align=\"center\">\n        ___Screen___ <br></br>\n        A1, A2, A3, A4 <br></br>\n        B1, B2, B3, B4 <br></br>\n        C1, C2, C3, C4 <br></br>\n        D1, D2, D3, D4 <br></br>\n      </p>\n          <Box textAlign='center'>\n            <Button variant=\"contained\" onClick={handleProceed}>\n              Pay\n            </Button>\n          </Box>\n          <br></br>\n          <Box textAlign='center'>\n            <Button variant=\"contained\" onClick={handleSubmit} fullWidth>\n              Add to Cart\n            </Button>\n          </Box>\n        {seats.map((seat,i)=>(\n          <div key={seat.id}>\n          {seat.reserved ? (\n                <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}} >\n                  ID:{seat.id},\n                  Seat:{seat.letter_row+seat.number_row} <br></br>\n                  <Typography color=\"error.main\">\n                  Status:{seat.reserved ? 'Occupied' : 'Empty'}\n                  </Typography>\n                </Paper>\n          ) : (\n              <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\",textAlign:\"left\"}}>\n              <ListItemButton role={undefined} onClick={handleToggle(i)} dense>\n                <ListItemIcon>\n                  <Checkbox\n                    edge=\"start\"\n                    checked={checked.indexOf(i) !== -1}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                </ListItemIcon>\n                  ID:{seat.id},\n                  Seat:{seat.letter_row+seat.number_row} <br></br>\n                  Status:{seat.reserved ? 'Occupied' : 'Empty'}\n                </ListItemButton>\n              </Paper>\n          )}\n          </div>\n        ))}\n          \n      </Paper>\n     \n    </Container>\n  );\n}\n","/Users/stewartpratt/Desktop/Projects/Movie-Ticket-System/react-frontend/src/containers/SearchMovie.js",["196","197","198","199"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Container from \"@mui/material/Container\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useEffect } from \"react\";\nimport { theatreSelected } from \"./Theatres.js\";\n\nexport default function SearchMovie() {\n\tconst paperStyle = {\n\t\tpadding: \"50px 20px\",\n\t\twidth: 600,\n\t\tmargin: \"20px auto\",\n\t};\n\tconst [isError, setIsError] = useState(false);\n\t// const [isSubmitted, setIsSubmitted] = useState(false);\n\tconst [id, setId] = useState(\"\");\n\tconst [movie, setMovie] = useState();\n\tconst [courses, setCourses] = useState();\n\n\tconst handleClick = (e) => {\n\t\te.preventDefault();\n\t\tconst s = { id };\n\t\t// console.log(s);\n\t\tconsole.log(id);\n\t\t// TODO: send data to database\n\t\tfetch(\"http://localhost:8080/api/v1/theatres/\"+theatreSelected.tId+\"/movies/\"+id, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\t// setIsSubmitted(true);\n\t\t\t\t// setCourses(null);\n\t\t\t\tsetIsError(false);\n\t\t\t\tsetMovie(data);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tconsole.log(\"Error\");\n\t\t\t\tsetIsError(true);\n\t\t\t\t// setIsSubmitted(false);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t\t<h1>Search Movie</h1>\n\t\t\t\t<p>Search a movie from the database</p>\n\n\t\t\t\t<Box\n\t\t\t\t\tcomponent=\"form\"\n\t\t\t\t\tsx={{\n\t\t\t\t\t\t\"& > :not(style)\": {\n\t\t\t\t\t\t\tm: 1,\n\t\t\t\t\t\t\twidth: 500,\n\t\t\t\t\t\t\tmaxWidth: \"100%\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tnoValidate\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tid=\"outlined-required\"\n\t\t\t\t\t\tlabel=\"Movie Name\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\tonChange={(e) => setId(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button variant=\"contained\" onClick={handleClick}>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Paper>\n\t\t\t<Paper elevation={3} style={paperStyle}>\n\t\t\t\t<h1>Response</h1>\n\t\t\t\t{movie ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\tID:{movie.mId},\n            \t\t\tName:{movie.name} <br></br>\n            \t\t\tRelease Date:{movie.releaseDate}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t\t{isError ? <div>Error. Please try again.</div> : <div></div>}\n\t\t\t</Paper>\n\t\t</Container>\n\t);\n}\n",{"ruleId":"200","severity":1,"message":"201","line":5,"column":8,"nodeType":"202","messageId":"203","endLine":5,"endColumn":12},{"ruleId":"200","severity":1,"message":"204","line":12,"column":8,"nodeType":"202","messageId":"203","endLine":12,"endColumn":14},{"ruleId":"200","severity":1,"message":"205","line":8,"column":9,"nodeType":"202","messageId":"203","endLine":8,"endColumn":12},{"ruleId":"200","severity":1,"message":"206","line":11,"column":10,"nodeType":"202","messageId":"203","endLine":11,"endColumn":17},{"ruleId":"200","severity":1,"message":"207","line":14,"column":11,"nodeType":"202","messageId":"203","endLine":14,"endColumn":31},{"ruleId":"200","severity":1,"message":"208","line":83,"column":11,"nodeType":"202","messageId":"203","endLine":83,"endColumn":16},{"ruleId":"200","severity":1,"message":"209","line":84,"column":11,"nodeType":"202","messageId":"203","endLine":84,"endColumn":15},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"211","line":21,"column":10,"nodeType":"202","messageId":"203","endLine":21,"endColumn":21},{"ruleId":"200","severity":1,"message":"212","line":22,"column":10,"nodeType":"202","messageId":"203","endLine":22,"endColumn":17},{"ruleId":"200","severity":1,"message":"213","line":23,"column":17,"nodeType":"202","messageId":"203","endLine":23,"endColumn":26},{"ruleId":"200","severity":1,"message":"214","line":24,"column":17,"nodeType":"202","messageId":"203","endLine":24,"endColumn":26},{"ruleId":"200","severity":1,"message":"215","line":25,"column":14,"nodeType":"202","messageId":"203","endLine":25,"endColumn":20},{"ruleId":"200","severity":1,"message":"216","line":26,"column":15,"nodeType":"202","messageId":"203","endLine":26,"endColumn":22},{"ruleId":"217","severity":1,"message":"218","line":63,"column":6,"nodeType":"219","endLine":63,"endColumn":20,"suggestions":"220"},{"ruleId":"200","severity":1,"message":"221","line":65,"column":9,"nodeType":"202","messageId":"203","endLine":65,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":110,"column":24,"nodeType":"202","messageId":"224","endLine":110,"endColumn":36},{"ruleId":"225","severity":1,"message":"226","line":115,"column":14,"nodeType":"202","messageId":"227","endLine":115,"endColumn":15},{"ruleId":"200","severity":1,"message":"228","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":11},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"229","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"206","line":15,"column":10,"nodeType":"202","messageId":"203","endLine":15,"endColumn":17},{"ruleId":"200","severity":1,"message":"230","line":15,"column":19,"nodeType":"202","messageId":"203","endLine":15,"endColumn":29},{"ruleId":"200","severity":1,"message":"231","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":21},{"ruleId":"200","severity":1,"message":"232","line":16,"column":23,"nodeType":"202","messageId":"203","endLine":16,"endColumn":37},{"ruleId":"200","severity":1,"message":"233","line":18,"column":10,"nodeType":"202","messageId":"203","endLine":18,"endColumn":13},{"ruleId":"200","severity":1,"message":"234","line":18,"column":14,"nodeType":"202","messageId":"203","endLine":18,"endColumn":20},{"ruleId":"200","severity":1,"message":"235","line":19,"column":10,"nodeType":"202","messageId":"203","endLine":19,"endColumn":13},{"ruleId":"200","severity":1,"message":"236","line":19,"column":14,"nodeType":"202","messageId":"203","endLine":19,"endColumn":20},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"237","line":9,"column":8,"nodeType":"202","messageId":"203","endLine":9,"endColumn":22},{"ruleId":"200","severity":1,"message":"238","line":10,"column":8,"nodeType":"202","messageId":"203","endLine":10,"endColumn":20},{"ruleId":"200","severity":1,"message":"239","line":11,"column":8,"nodeType":"202","messageId":"203","endLine":11,"endColumn":16},{"ruleId":"200","severity":1,"message":"206","line":21,"column":10,"nodeType":"202","messageId":"203","endLine":21,"endColumn":17},{"ruleId":"200","severity":1,"message":"231","line":22,"column":10,"nodeType":"202","messageId":"203","endLine":22,"endColumn":21},{"ruleId":"200","severity":1,"message":"213","line":23,"column":17,"nodeType":"202","messageId":"203","endLine":23,"endColumn":26},{"ruleId":"200","severity":1,"message":"214","line":24,"column":17,"nodeType":"202","messageId":"203","endLine":24,"endColumn":26},{"ruleId":"200","severity":1,"message":"215","line":25,"column":14,"nodeType":"202","messageId":"203","endLine":25,"endColumn":20},{"ruleId":"200","severity":1,"message":"216","line":26,"column":15,"nodeType":"202","messageId":"203","endLine":26,"endColumn":22},{"ruleId":"200","severity":1,"message":"240","line":35,"column":12,"nodeType":"202","messageId":"203","endLine":35,"endColumn":21},{"ruleId":"200","severity":1,"message":"228","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":11},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"229","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"241","line":8,"column":10,"nodeType":"202","messageId":"203","endLine":8,"endColumn":17},{"ruleId":"200","severity":1,"message":"242","line":10,"column":10,"nodeType":"202","messageId":"203","endLine":10,"endColumn":23},{"ruleId":"200","severity":1,"message":"243","line":11,"column":10,"nodeType":"202","messageId":"203","endLine":11,"endColumn":21},{"ruleId":"200","severity":1,"message":"244","line":12,"column":8,"nodeType":"202","messageId":"203","endLine":12,"endColumn":13},{"ruleId":"200","severity":1,"message":"245","line":99,"column":9,"nodeType":"202","messageId":"203","endLine":99,"endColumn":17},{"ruleId":"200","severity":1,"message":"245","line":139,"column":9,"nodeType":"202","messageId":"203","endLine":139,"endColumn":17},{"ruleId":"200","severity":1,"message":"245","line":178,"column":9,"nodeType":"202","messageId":"203","endLine":178,"endColumn":17},{"ruleId":"200","severity":1,"message":"206","line":42,"column":10,"nodeType":"202","messageId":"203","endLine":42,"endColumn":17},{"ruleId":"200","severity":1,"message":"231","line":43,"column":10,"nodeType":"202","messageId":"203","endLine":43,"endColumn":21},{"ruleId":"200","severity":1,"message":"228","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":11},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"229","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"233","line":16,"column":10,"nodeType":"202","messageId":"203","endLine":16,"endColumn":13},{"ruleId":"200","severity":1,"message":"234","line":16,"column":14,"nodeType":"202","messageId":"203","endLine":16,"endColumn":20},{"ruleId":"200","severity":1,"message":"228","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":11},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"229","line":6,"column":8,"nodeType":"202","messageId":"203","endLine":6,"endColumn":14},{"ruleId":"200","severity":1,"message":"246","line":8,"column":16,"nodeType":"202","messageId":"203","endLine":8,"endColumn":35},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"241","line":8,"column":10,"nodeType":"202","messageId":"203","endLine":8,"endColumn":17},{"ruleId":"200","severity":1,"message":"247","line":10,"column":9,"nodeType":"202","messageId":"203","endLine":10,"endColumn":20},{"ruleId":"200","severity":1,"message":"242","line":14,"column":10,"nodeType":"202","messageId":"203","endLine":14,"endColumn":23},{"ruleId":"200","severity":1,"message":"248","line":15,"column":5,"nodeType":"202","messageId":"203","endLine":15,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":57,"column":6,"nodeType":"219","endLine":57,"endColumn":20,"suggestions":"249"},{"ruleId":"222","severity":1,"message":"223","line":67,"column":22,"nodeType":"202","messageId":"224","endLine":67,"endColumn":34},{"ruleId":"225","severity":1,"message":"226","line":72,"column":12,"nodeType":"202","messageId":"227","endLine":72,"endColumn":13},{"ruleId":"200","severity":1,"message":"210","line":3,"column":8,"nodeType":"202","messageId":"203","endLine":3,"endColumn":17},{"ruleId":"200","severity":1,"message":"250","line":8,"column":10,"nodeType":"202","messageId":"203","endLine":8,"endColumn":14},{"ruleId":"200","severity":1,"message":"251","line":25,"column":10,"nodeType":"202","messageId":"203","endLine":25,"endColumn":21},{"ruleId":"200","severity":1,"message":"252","line":25,"column":22,"nodeType":"202","messageId":"203","endLine":25,"endColumn":29},{"ruleId":"200","severity":1,"message":"213","line":26,"column":17,"nodeType":"202","messageId":"203","endLine":26,"endColumn":26},{"ruleId":"200","severity":1,"message":"214","line":27,"column":17,"nodeType":"202","messageId":"203","endLine":27,"endColumn":26},{"ruleId":"200","severity":1,"message":"215","line":28,"column":14,"nodeType":"202","messageId":"203","endLine":28,"endColumn":20},{"ruleId":"200","severity":1,"message":"216","line":29,"column":15,"nodeType":"202","messageId":"203","endLine":29,"endColumn":22},{"ruleId":"200","severity":1,"message":"206","line":31,"column":10,"nodeType":"202","messageId":"203","endLine":31,"endColumn":17},{"ruleId":"200","severity":1,"message":"231","line":32,"column":10,"nodeType":"202","messageId":"203","endLine":32,"endColumn":21},{"ruleId":"200","severity":1,"message":"253","line":34,"column":10,"nodeType":"202","messageId":"203","endLine":34,"endColumn":22},{"ruleId":"200","severity":1,"message":"254","line":34,"column":24,"nodeType":"202","messageId":"203","endLine":34,"endColumn":39},{"ruleId":"200","severity":1,"message":"255","line":7,"column":20,"nodeType":"202","messageId":"203","endLine":7,"endColumn":29},{"ruleId":"200","severity":1,"message":"256","line":20,"column":9,"nodeType":"202","messageId":"203","endLine":20,"endColumn":16},{"ruleId":"200","severity":1,"message":"257","line":20,"column":18,"nodeType":"202","messageId":"203","endLine":20,"endColumn":28},{"ruleId":"200","severity":1,"message":"258","line":24,"column":9,"nodeType":"202","messageId":"203","endLine":24,"endColumn":10},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Seats2' is defined but never used.","'nav' is assigned a value but never used.","'isError' is assigned a value but never used.","'userHasAuthenticated' is assigned a value but never used.","'uname' is assigned a value but never used.","'pass' is assigned a value but never used.","'TextField' is defined but never used.","'isCancelled' is assigned a value but never used.","'isGuest' is assigned a value but never used.","'setCardNo' is assigned a value but never used.","'setExpiry' is assigned a value but never used.","'setCvv' is assigned a value but never used.","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'balance'. Either include it or remove the dependency array.","ArrayExpression",["259"],"'handleClick' is assigned a value but never used.","no-use-before-define","'refundAmount' was used before it was defined.","usedBeforeDefined","no-redeclare","'i' is already defined.","redeclared","'Box' is defined but never used.","'Button' is defined but never used.","'setIsError' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'tId' is assigned a value but never used.","'settId' is assigned a value but never used.","'mId' is assigned a value but never used.","'setmId' is assigned a value but never used.","'ListItemButton' is defined but never used.","'ListItemIcon' is defined but never used.","'Checkbox' is defined but never used.","'sortByKey' is defined but never used.","'flexbox' is defined but never used.","'globalTickets' is defined but never used.","'useNavigate' is defined but never used.","'Axios' is defined but never used.","'response' is assigned a value but never used.","'useLinkClickHandler' is defined but never used.","'paymentInfo' is defined but never used.","'userType' is defined but never used.",["260"],"'Link' is defined but never used.","'createdSeat' is assigned a value but never used.","'setSeat' is assigned a value but never used.","'isSubmitted3' is assigned a value but never used.","'setIsSubmitted3' is assigned a value but never used.","'useEffect' is defined but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","'s' is assigned a value but never used.",{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},"Update the dependencies array to be: [balance, isSubmitted2]",{"range":"264","text":"265"},{"range":"266","text":"265"},[1990,2004],"[balance, isSubmitted2]",[1681,1695]]